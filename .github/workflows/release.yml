name: Release

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag Name'
        required: true
        default: 'v1.0.0'

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: stable

      - name: Create and Push Tag
        id: tag
        run: |
          export TAG_NAME=${{ github.event.inputs.tag_name }}
          echo "Creating tag: $TAG_NAME"
          git config user.name ${{ github.actor }}
          git config user.email ${{ github.actor }}+bot@users.noreply.github.com
          git tag $TAG_NAME
          git push --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Run Goreleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}
          tags: |
            # If tag contains "beta", only generate specific version tag
            type=match,pattern=^(.*-beta.*)$,group=1,enable=${{ contains(github.event.inputs.tag_name, 'beta') }}
            # If tag does not contain "beta", generate version tag
            type=match,pattern=^v(.*)$,group=1,enable=${{ !contains(github.event.inputs.tag_name, 'beta') }}
          flavor: |
            # Explicitly control latest tag, only generate it when it does not contain "beta"
            latest=${{ !contains(github.event.inputs.tag_name, 'beta') }}
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          build-args: |
            GITHUB_SHA=${{ github.sha }}
            VERSION=${{ github.event.inputs.tag_name }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
